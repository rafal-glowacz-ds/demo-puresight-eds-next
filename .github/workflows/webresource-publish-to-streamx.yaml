name: Publish web resources to StreamX

on:
  workflow_dispatch:
    inputs:
      publish_all_webresources:
        description: "Publish all, pattern included webresources to StreamX"
        required: false
        type: boolean
        default: false
  pull_request:
    types:
      - closed
    branches:
      - main

jobs:
  publish-if-merged:
    if: github.event.pull_request.merged == true
    name: run_on_pr_merged
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@master
        with:
          fetch-depth: 0

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'adopt'

      - name: Set up homebrew
        uses: 'Homebrew/actions/setup-homebrew@master'

      - name: Install StreamX via Homebrew
        run: |
          brew install streamx-dev/preview-tap/streamx

      - name: Publish modified, pattern included webresources to StreamX
        env:
          STREAMX_INGESTION_AUTH_TOKEN: ${{ secrets.STREAMX_TOKEN }}
        run: |
          if [ -z "$STREAMX_INGESTION_AUTH_TOKEN" ]; then
            echo "Error: STREAMX_INGESTION_AUTH_TOKEN is not set. Please configure the GitHub secret."
            exit 1
          fi

          VARS_STREAMX_INGESTION_WEBRESOURCE_INCLUDES='${{ vars.STREAMX_INGESTION_WEBRESOURCE_INCLUDES }}';
          VARS_DRY_RUN='${{ vars.DRY_RUN }}';

          if [[ -z $VARS_STREAMX_INGESTION_WEBRESOURCE_INCLUDES || $VARS_STREAMX_INGESTION_WEBRESOURCE_INCLUDES == ""  ]]; then
            echo "Missing file patterns variable [PUBLISH_STREAMX_FILES_PATTERNS]. Execution skipped.";
            exit 1;
          fi

          sleep 1s;
          DRY_RUN=false;
          if [[ ! -z $VARS_DRY_RUN && $VARS_DRY_RUN == "true" ]]; then
            DRY_RUN=true;
            if ( $DRY_RUN ); then
              echo "Dry run mode: enabled"
            fi
          fi

          CHANGED_FILES=$(git diff --name-only HEAD HEAD~${{ github.event.pull_request.commits }})

          PATTERNS=`echo "$VARS_STREAMX_INGESTION_WEBRESOURCE_INCLUDES" | jq .[]`
          echo "Accepted file patterns:"
          echo "$PATTERNS"
          echo "--------------------------------------"

          for FILE_PATH in $CHANGED_FILES; do
            echo "--------------------------------------"
            echo "Checking file $FILE_PATH"
            for PATTERN in $PATTERNS; do
              echo "Matching $FILE_PATH for pattern $PATTERN";
              if [[ "$FILE_PATH" =~ "$PATTERN" ]]; then
                echo "Accepted file $FILE_PATH - did match the pattern config.";
                if ( $DRY_RUN ); then
                  echo "Sending $FILE_PATH to StreamX - SKIPPED - dry run mode enabled";
                else
                  streamx publish --ingestion-url=${{ vars.STREAMX_INGESTION_BASE_URL }} web-resources $FILE_PATH -b $FILE_PATH
                fi
              else
                echo "Rejected file $FILE_PATH - did match the pattern config.";
              fi
            done
          done
        shell: bash

  publish-all:
    if: github.event_name == 'workflow_dispatch'
    name: run_on_manual_trigger
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@master
        with:
          fetch-depth: 0

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'adopt'

      - name: Set up homebrew
        uses: 'Homebrew/actions/setup-homebrew@master'

      - name: Install StreamX via Homebrew
        run: |
          brew install streamx-dev/preview-tap/streamx

      - name: Publish all, pattern included webresources to StreamX
        env:
          STREAMX_INGESTION_AUTH_TOKEN: ${{ secrets.STREAMX_TOKEN }}
        run: |
          if [ -z "$STREAMX_INGESTION_AUTH_TOKEN" ]; then
            echo "Error: STREAMX_INGESTION_AUTH_TOKEN is not set. Please configure the GitHub secret."
            exit 1
          fi

          VARS_STREAMX_INGESTION_WEBRESOURCE_INCLUDES='${{ vars.STREAMX_INGESTION_WEBRESOURCE_INCLUDES }}';
          VARS_DRY_RUN='${{ vars.DRY_RUN }}';

          if [[ -z $VARS_STREAMX_INGESTION_WEBRESOURCE_INCLUDES || $VARS_STREAMX_INGESTION_WEBRESOURCE_INCLUDES == ""  ]]; then
            echo "Missing file patterns variable [PUBLISH_STREAMX_FILES_PATTERNS]. Execution skipped.";
            exit 1;
          fi

          sleep 1s;
          DRY_RUN=false;
          if [[ ! -z $VARS_DRY_RUN && $VARS_DRY_RUN == "true" ]]; then
            DRY_RUN=true;
            if ( $DRY_RUN ); then
              echo "Dry run mode: enabled"
            fi
          fi

          echo "--------------------------------------"
          echo ls -la;
          echo "--------------------------------------"


          CHANGED_FILES=`find * -type f`

          PATTERNS=`echo "$VARS_STREAMX_INGESTION_WEBRESOURCE_INCLUDES" | jq .[]`
          echo "Accepted file patterns:"
          echo "$PATTERNS"
          echo "--------------------------------------"

          for FILE_PATH in $CHANGED_FILES; do
            echo "--------------------------------------"
            echo "Checking file $FILE_PATH"
            for PATTERN in $PATTERNS; do
              echo "Matching $FILE_PATH for pattern '$PATTERN'";
              if [[ "$FILE_PATH" =~ "$PATTERN" ]]; then
                echo "Accepted file $FILE_PATH - did match the pattern config.";
                if ( $DRY_RUN ); then
                  echo "Sending $FILE_PATH to StreamX - SKIPPED - dry run mode enabled";
                else
                  streamx publish --ingestion-url=${{ vars.STREAMX_INGESTION_BASE_URL }} web-resources $FILE_PATH -b $FILE_PATH
                fi
              else
                echo "Rejected file $FILE_PATH - did match the pattern config.";
              fi
            done
          done

        shell: bash